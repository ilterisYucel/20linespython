{
    "codes" : [
        "def binarySearch(arr, x):",
        "if len(arr) < 1:",
        "return False",
        "if arr[len(arr) // 2] == x:",
        "return True",
        "elif(arr[len(arr) // 2]) < x:",
        "return binarySearch(arr[len(arr) // 2 + 1 :], x)",
        "elif(arr[len(arr) // 2]) > x:",
        "return binarySearch(arr[0 : len(arr) // 2], x)",
        "print(binarySearch([2,3,4,5,8,10,12], 5))",
        "print(binarySearch([2,3,4,5,8,10,12], 3))",
        "print(binarySearch([2,3,4,5,8,10,12], 10))",
        "print(binarySearch([2,3,4,5,8,10,12], 13))"
    ],
    "yLocs" : [0,1,2,3,4,5,6,7,8,9,10,11,12],
    "xLocs" : [0,1,2,1,2,1,2,1,2,0,0,0,0,0],
    "trueComb" : [
                  [0,1,2,3,4,5,6,7,8,9,10,11,12],
                  [0,1,2,3,4,5,6,7,8,9,10,12,11],
                  [0,1,2,3,4,5,6,7,8,9,11,12,10],
                  [0,1,2,3,4,5,6,7,8,9,11,10,12],
                  [0,1,2,3,4,5,6,7,8,9,12,11,10],
                  [0,1,2,3,4,5,6,7,8,9,12,10,11],
                  
                  [0,1,2,3,4,5,6,7,8,10,11,9,12],
                  [0,1,2,3,4,5,6,7,8,10,11,12,9],
                  [0,1,2,3,4,5,6,7,8,10,9,12,11],
                  [0,1,2,3,4,5,6,7,8,10,9,11,12],
                  [0,1,2,3,4,5,6,7,8,10,12,11,9],
                  [0,1,2,3,4,5,6,7,8,10,12,9,11],
                  
                  [0,1,2,3,4,5,6,7,8,11,9,10,12],
                  [0,1,2,3,4,5,6,7,8,11,9,12,10],
                  [0,1,2,3,4,5,6,7,8,11,10,9,12],
                  [0,1,2,3,4,5,6,7,8,11,10,12,9],
                  [0,1,2,3,4,5,6,7,8,11,12,10,9],
                  [0,1,2,3,4,5,6,7,8,11,12,9,10],
                  
                  [0,1,2,3,4,5,6,7,8,12,10,11,9],
                  [0,1,2,3,4,5,6,7,8,12,10,9,11],
                  [0,1,2,3,4,5,6,7,8,12,11,10,9],
                  [0,1,2,3,4,5,6,7,8,12,11,9,10],
                  [0,1,2,3,4,5,6,7,8,12,9,10,11],
                  [0,1,2,3,4,5,6,7,8,12,9,11,10],
                  
                  [0,1,2,3,4,7,8,5,6,9,10,11,12],
                  [0,1,2,3,4,7,8,5,6,9,10,12,11],
                  [0,1,2,3,4,7,8,5,6,9,11,12,10],
                  [0,1,2,3,4,7,8,5,6,9,11,10,12],
                  [0,1,2,3,4,7,8,5,6,9,12,11,10],
                  [0,1,2,3,4,7,8,5,6,9,12,10,11],
                  
                  [0,1,2,3,4,7,8,5,6,10,11,9,12],
                  [0,1,2,3,4,7,8,5,6,10,11,12,9],
                  [0,1,2,3,4,7,8,5,6,10,9,12,11],
                  [0,1,2,3,4,7,8,5,6,10,9,11,12],
                  [0,1,2,3,4,7,8,5,6,10,12,11,9],
                  [0,1,2,3,4,7,8,5,6,10,12,9,11],
                  
                  [0,1,2,3,4,7,8,5,6,11,9,10,12],
                  [0,1,2,3,4,7,8,5,6,11,9,12,10],
                  [0,1,2,3,4,7,8,5,6,11,10,9,12],
                  [0,1,2,3,4,7,8,5,6,11,10,12,9],
                  [0,1,2,3,4,7,8,5,6,11,12,10,9],
                  [0,1,2,3,4,7,8,5,6,11,12,9,10],
                  
                  [0,1,2,3,4,7,8,5,6,12,10,11,9],
                  [0,1,2,3,4,7,8,5,6,12,10,9,11],
                  [0,1,2,3,4,7,8,5,6,12,11,10,9],
                  [0,1,2,3,4,7,8,5,6,12,11,9,10],
                  [0,1,2,3,4,7,8,5,6,12,9,10,11],
                  [0,1,2,3,4,7,8,5,6,12,9,11,10]
                  
                  
                 ]
}
